<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pct_.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>